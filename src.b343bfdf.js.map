{"version":3,"sources":["index.js"],"names":["makeNegative","num","positiveSum","arr","positives","i","length","push","total","reduce","acc","descendingOrder","n","console","log","Array","from","String","Number","sort","a","b","str","join","nbYear","p0","percent","aug","p","oddOrEven","array","minMax","Math","min","max","longestWord","string","split","longest","word","findLongestWord","makenumb","x","r","cos","abs","arithmetic","operator","findShort","s","newArr","map","elem","removeSmallest","numbers","newNumbers","indexOfMin","indexOf","splice","smallEnough","limit","every","value","rowWeights","team1","team2","repeater","repeat","flattenAndSort","concat","prototype","toJadenCase","charAt","toUpperCase","slice","response","ccy","bace_ccy","buy","sale","neededArr","filter","el","findLongest","currentNum","sumOfMinimums","minSum","forEach","element","s1","s2","arr1","arr2","uniq","index","roundToNext5","ceil","reverseWords","reverse","capitals","getSum","digitize","toString","missingNo","nums","result","apply","includes","halvingSum","floor","solution","highAndLow","sequence","sum","arg","prev","numb","vaporcode","predictAge","age","sqrt","removeVowels","vowels","flag","j","withoutLast","between"],"mappings":"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","file":"src.b343bfdf.js","sourceRoot":"../src","sourcesContent":["//Jaden Casing Strings 7 kyu\n\nString.prototype.toJadenCase = function (str) {\n  return this.split(' ')\n    .map(function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    })\n    .join(' ');\n};\n\n//Return Negative 7 kyu\nfunction makeNegative(num) {\n  if (num < 0) {\n    return num;\n  } else if (num === 0) {\n    return num;\n  }\n  return (num = num * -1);\n}\n\n//Sum of positive 7 kyu\nfunction positiveSum(arr) {\n  let positives = [];\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      positives.push(arr[i]);\n    }\n  }\n  //     console.log(positives);\n  const total = positives.reduce((acc, num) => {\n    return acc + num;\n  }, 0);\n  //     console.log(total);\n  return total;\n}\n\n//Descending Order 7 kyu\nfunction descendingOrder(n) {\n  console.log(n);\n  let arr = Array.from(String(n), Number);\n  console.log(arr);\n  arr = [...arr].sort((a, b) => b - a);\n  console.log(arr);\n  const str = +arr.join('');\n  console.log(str);\n  return str;\n}\n\n//Growth of a Population 7 kyu\nfunction nbYear(p0, percent, aug, p) {\n  let i = 0;\n  while (true) {\n    if (p0 >= p) {\n      return i;\n    }\n    p0 = p0 * (1 + percent / 100) + aug;\n    i++;\n  }\n}\n//Odd or Even? 7 kyu\nfunction oddOrEven(array) {\n  if (array.length == 0) {\n    return 'even';\n  }\n  const total = array.reduce((acc, num) => {\n    return acc + num;\n  });\n  console.log(total);\n  if (total % 2) {\n    return 'odd';\n  }\n  return 'even';\n}\n//The highest profit wins! 7 kyu\nfunction minMax(arr) {\n  return [Math.min(...arr), Math.max(...arr)];\n}\n\nfunction longestWord(string) {\n  const str = string.split(' ');\n  let longest = 0;\n  let word = null;\n  for (let i = 0; i < str.length - 1; i++) {\n    if (longest < str[i].length) {\n      longest = str[i].length;\n      word = str[i];\n    }\n  }\n  return word;\n}\n\nlongestWord('The quick brown fox jumped over the lazy dog');\n////\nfunction findLongestWord(str) {\n  const longestWord = str.split(' ').sort(function (a, b) {\n    return b.length - a.length;\n  });\n  console.log(longestWord[0]);\n  return longestWord[0].length;\n}\nfindLongestWord('The quick brown fox jumped over the lazy dog');\n/////\n\nfunction makenumb(n, x) {\n  let y = 0;\n  for (let i = n; i <= x; i++) {\n    r = i / i + 1 - Math.cos(i) * Math.abs(x);\n    console.log(r);\n  }\n}\nmakenumb(2, 5);\n\n//Make a function that does arithmetic!\nfunction arithmetic(a, b, operator) {\n  switch ((a, b, operator)) {\n    case 'add':\n      return a + b;\n      break;\n\n    case 'subtract':\n      return a - b;\n      break;\n\n    case 'multiply':\n      return a * b;\n      break;\n\n    case 'divide':\n      return a / b;\n      break;\n  }\n}\n\n//Shortest Word\nfunction findShort(s) {\n  const arr = s.split(' ');\n  const newArr = arr.map(elem => {\n    return elem.length;\n  });\n  return Math.min(...newArr);\n}\n\n//Remove the minimum\nfunction removeSmallest(numbers) {\n  let newNumbers = [...numbers];\n  let indexOfMin = newNumbers.indexOf(Math.min(...newNumbers));\n  newNumbers.splice(indexOfMin, 1);\n  return newNumbers;\n}\n\n//Small enough? - Beginner\nfunction smallEnough(a, limit) {\n  return a.every(value => value <= limit);\n}\n\n//Row Weights\nfunction rowWeights(array) {\n  let team1 = 0;\n  let team2 = 0;\n  for (let i = 0; i < array.length; i++) {\n    if (i % 2 === 0) {\n      team1 += array[i];\n    } else {\n      team2 += array[i];\n    }\n  }\n  return [team1, team2];\n}\n\n//Thinkful - String Drills: Repeater\nfunction repeater(string, n) {\n  return string.repeat(n);\n}\n\n//Flatten and sort an array\nfunction flattenAndSort(array) {\n  return [].concat(...array).sort((a, b) => a - b);\n}\n/////\nconst response = [\n  { ccy: 'USD', bace_ccy: 'UAH', buy: '29.25', sale: '32.18' },\n  { ccy: 'EUR', bace_ccy: 'UAH', buy: '31.82', sale: '34.80' },\n  { ccy: 'BTC', bace_ccy: 'USD', buy: '38390.85', sale: '42431.99' },\n  { ccy: 'USD', bace_ccy: 'UAH', buy: '11.25', sale: '32.18' },\n  { ccy: 'EUR', bace_ccy: 'UAH', buy: '40.82', sale: '34.80' },\n];\n\n// console.log(response);\nconst neededArr = response.filter(el => el.ccy == 'USD' || el.ccy == 'EUR');\n// console.log(neededArr);\n////\n//Most digits\nfunction findLongest(array) {\n  const newArr = array.join(',').split(',');\n  const longestWord = newArr.reduce(function (longest, currentNum) {\n    if (currentNum.length > longest.length) {\n      return currentNum;\n    } else return longest;\n  }, '');\n  return +longestWord;\n}\n//Sum of Minimums!\nfunction sumOfMinimums(arr) {\n  console.log(arr);\n  let minSum = 0;\n  arr.forEach(element => {\n    minSum += Math.min(...element);\n  });\n  return minSum;\n}\n//Two to One\nfunction longest(s1, s2) {\n  const arr1 = s1.split('');\n  const arr2 = s2.split('');\n  const newArr = arr1.concat(arr2);\n  const uniq = newArr\n    .filter((str, index, array) => array.indexOf(str) === index)\n    .sort()\n    .join('');\n  return uniq;\n}\n//Round up to the next multiple of 5\nfunction roundToNext5(n) {\n  return Math.ceil(n / 5) * 5;\n}\n//Reverse words\nfunction reverseWords(str) {\n  return str.split('').reverse().join('').split(' ').reverse().join(' ');\n}\n//Find the capitals\nvar capitals = function (word) {\n  const arr = word.split('');\n  let newArr = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] == arr[i].toUpperCase()) {\n      newArr.push(arr.indexOf(arr[i]));\n    }\n  }\n  return newArr;\n};\n//Beginner Series #3 Sum of Numbers\nfunction getSum(a, b) {\n  if (a == b) {\n    return a;\n  } else if (a > b) {\n    return a + getSum(a - 1, b);\n  } else {\n    return a + getSum(a + 1, b);\n  }\n}\n// Digitize\nfunction digitize(n) {\n  const arr = Array.from(n.toString()).map(num => (num = +num));\n  return arr;\n}\n\n//Find the Missing Number\nfunction missingNo(nums) {\n  let result = [];\n\n  for (let i = 0; i <= Math.max.apply(null, nums); i++) {\n    if (!nums.includes(i)) {\n      result.push(i);\n    }\n  }\n  return Number(result.join(''));\n}\n//Halving Sum\nfunction halvingSum(n) {\n  let result = 0;\n  while (n > 0) {\n    result += n;\n    n = Math.floor(n / 2);\n  }\n  return result;\n}\n//Reversed Strings\nexport function solution(str) {\n  const arr = str.split('');\n  return arr.reverse().join('');\n}\n//Highest and Lowest\nfunction highAndLow(numbers) {\n  const arr = numbers.split(' ');\n  return [Math.max(...arr), Math.min(...arr)].join(' ');\n}\n//Guess the Sequence\nfunction sequence(x) {\n  let arr = [];\n  for (let i = 1; i <= x; i++) {\n    arr.push(i);\n  }\n  return arr.sort();\n}\n//Sum of all arguments\nfunction sum(...arg) {\n  let a = arg.reduce((prev, numb) => {\n    return prev + numb;\n  }, 0);\n  return a;\n}\n//V A P O R C O D E\nfunction vaporcode(string) {\n  arr = string.toUpperCase().split('');\n  newArr = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] !== ' ') {\n      newArr.push(arr[i]);\n    }\n  }\n  return newArr.join('  ');\n}\n//Predict your age!\nfunction predictAge(...age) {\n  return Math.floor(Math.sqrt(age.map(num => num * num).reduce((sum, numb) => sum + numb)) / 2);\n}\n\n//All Star Code Challenge #3\nfunction removeVowels(str) {\n  const vowels = ['a', 'e', 'i', 'o', 'u'];\n  let result = [];\n  for (let i = 0; i < str.length; i++) {\n    let flag = true;\n    for (let j = 0; j < vowels.length; j++) {\n      if (str[i] === vowels[j]) {\n        flag = false;\n        break;\n      }\n    }\n    if (flag) result.push(str[i]);\n  }\n  return result.join('');\n}\nremoveVowels('drake'); //“drk”\n\n//Working with arrays I (and why your code fails in some katas)\nfunction withoutLast(arr) {\n  return arr.slice(0, arr.length - 1);\n}\n//What is between?\nfunction between(a, b) {\n  let arr = [];\n  for (let i = a; i <= b; i++) {\n    arr.push(i);\n  }\n  return arr;\n}\n"]}