{"version":3,"sources":["index.js"],"names":["makeNegative","num","positiveSum","arr","positives","i","length","push","total","reduce","acc","descendingOrder","n","console","log","Array","from","String","Number","sort","a","b","str","join","nbYear","p0","percent","aug","p","oddOrEven","array","minMax","Math","min","max","longestWord","string","split","longest","word","findLongestWord","arithmetic","operator","findShort","s","newArr","map","elem","removeSmallest","numbers","newNumbers","indexOfMin","indexOf","splice","smallEnough","limit","every","value","rowWeights","team1","team2","repeater","repeat","flattenAndSort","concat","prototype","toJadenCase","charAt","toUpperCase","slice","response","ccy","bace_ccy","buy","sale","neededArr","filter","el","findLongest","currentNum","sumOfMinimums","minSum","forEach","element","s1","s2","arr1","arr2","uniq","index","roundToNext5","ceil","reverseWords","reverse","capitals","getSum","digitize","toString","missingNo","nums","result","apply","includes","halvingSum","floor","solution","highAndLow","sequence","x","sum","arg","prev","numb","vaporcode","predictAge","age","sqrt","removeVowels","vowels","flag","j","withoutLast","between","updateLight","current","filterLongWords","friend","friends","fourSeven","qw","cube","pow","squareDigits","maxDiff","list","validBraces","braces","matches","stack","currentChar","pop","openOrSenior","data","number","findNumbers","match","count","counter","towerBuilder","nFloors","tower","uniqueInOrder","iterable","trim","createPhoneNumber","likes","names","findUniq","lastIndexOf","permutation","kebabize","replace","toLowerCase","stringTransformer","letter","letterCount","undefined","arrayDiff","findNumber","flatArr","intervalArr","low","high","isNaN","dontGiveMeFive","start","end","findmin","sorted","first","second","getCommonElements","array1","array2","sumTwoSmallestNumbers","sortedArr","find","wordsArr","strArr","getDivisorsCnt","printerError","oddCount","consecutive"],"mappings":"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","file":"src.ac8e57cf.js","sourceRoot":"../src","sourcesContent":["//Jaden Casing Strings 7 kyu\n\nString.prototype.toJadenCase = function (str) {\n  return this.split(' ')\n    .map(function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    })\n    .join(' ');\n};\n\n//Return Negative 7 kyu\nfunction makeNegative(num) {\n  if (num < 0) {\n    return num;\n  } else if (num === 0) {\n    return num;\n  }\n  return (num = num * -1);\n}\n\n//Sum of positive 7 kyu\nfunction positiveSum(arr) {\n  let positives = [];\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] > 0) {\n      positives.push(arr[i]);\n    }\n  }\n  //     console.log(positives);\n  const total = positives.reduce((acc, num) => {\n    return acc + num;\n  }, 0);\n  //     console.log(total);\n  return total;\n}\n\n//Descending Order 7 kyu\nfunction descendingOrder(n) {\n  console.log(n);\n  let arr = Array.from(String(n), Number);\n  console.log(arr);\n  arr = [...arr].sort((a, b) => b - a);\n  console.log(arr);\n  const str = +arr.join('');\n  console.log(str);\n  return str;\n}\n\n//Growth of a Population 7 kyu\nfunction nbYear(p0, percent, aug, p) {\n  let i = 0;\n  while (true) {\n    if (p0 >= p) {\n      return i;\n    }\n    p0 = p0 * (1 + percent / 100) + aug;\n    i++;\n  }\n}\n//Odd or Even? 7 kyu\nfunction oddOrEven(array) {\n  if (array.length == 0) {\n    return 'even';\n  }\n  const total = array.reduce((acc, num) => {\n    return acc + num;\n  });\n  console.log(total);\n  if (total % 2) {\n    return 'odd';\n  }\n  return 'even';\n}\n//The highest profit wins! 7 kyu\nfunction minMax(arr) {\n  return [Math.min(...arr), Math.max(...arr)];\n}\n\nfunction longestWord(string) {\n  const str = string.split(' ');\n  let longest = 0;\n  let word = null;\n  for (let i = 0; i < str.length - 1; i++) {\n    if (longest < str[i].length) {\n      longest = str[i].length;\n      word = str[i];\n    }\n  }\n  return word;\n}\n\nlongestWord('The quick brown fox jumped over the lazy dog');\n////\nfunction findLongestWord(str) {\n  const longestWord = str.split(' ').sort(function (a, b) {\n    return b.length - a.length;\n  });\n  return longestWord[0].length;\n}\nfindLongestWord('The quick brown fox jumped over the lazy dog');\n/////\n\n//Make a function that does arithmetic!\nfunction arithmetic(a, b, operator) {\n  switch ((a, b, operator)) {\n    case 'add':\n      return a + b;\n      break;\n\n    case 'subtract':\n      return a - b;\n      break;\n\n    case 'multiply':\n      return a * b;\n      break;\n\n    case 'divide':\n      return a / b;\n      break;\n  }\n}\n\n//Shortest Word\nfunction findShort(s) {\n  const arr = s.split(' ');\n  const newArr = arr.map(elem => {\n    return elem.length;\n  });\n  return Math.min(...newArr);\n}\n\n//Remove the minimum\nfunction removeSmallest(numbers) {\n  let newNumbers = [...numbers];\n  let indexOfMin = newNumbers.indexOf(Math.min(...newNumbers));\n  newNumbers.splice(indexOfMin, 1);\n  return newNumbers;\n}\n\n//Small enough? - Beginner\nfunction smallEnough(a, limit) {\n  return a.every(value => value <= limit);\n}\n\n//Row Weights\nfunction rowWeights(array) {\n  let team1 = 0;\n  let team2 = 0;\n  for (let i = 0; i < array.length; i++) {\n    if (i % 2 === 0) {\n      team1 += array[i];\n    } else {\n      team2 += array[i];\n    }\n  }\n  return [team1, team2];\n}\n\n//Thinkful - String Drills: Repeater\nfunction repeater(string, n) {\n  return string.repeat(n);\n}\n\n//Flatten and sort an array\nfunction flattenAndSort(array) {\n  return [].concat(...array).sort((a, b) => a - b);\n}\n/////\nconst response = [\n  { ccy: 'USD', bace_ccy: 'UAH', buy: '29.25', sale: '32.18' },\n  { ccy: 'EUR', bace_ccy: 'UAH', buy: '31.82', sale: '34.80' },\n  { ccy: 'BTC', bace_ccy: 'USD', buy: '38390.85', sale: '42431.99' },\n  { ccy: 'USD', bace_ccy: 'UAH', buy: '11.25', sale: '32.18' },\n  { ccy: 'EUR', bace_ccy: 'UAH', buy: '40.82', sale: '34.80' },\n];\n\n// console.log(response);\nconst neededArr = response.filter(el => el.ccy == 'USD' || el.ccy == 'EUR');\n// console.log(neededArr);\n////\n//Most digits\nfunction findLongest(array) {\n  const newArr = array.join(',').split(',');\n  const longestWord = newArr.reduce(function (longest, currentNum) {\n    if (currentNum.length > longest.length) {\n      return currentNum;\n    } else return longest;\n  }, '');\n  return +longestWord;\n}\n//Sum of Minimums!\nfunction sumOfMinimums(arr) {\n  console.log(arr);\n  let minSum = 0;\n  arr.forEach(element => {\n    minSum += Math.min(...element);\n  });\n  return minSum;\n}\n//Two to One\nfunction longest(s1, s2) {\n  const arr1 = s1.split('');\n  const arr2 = s2.split('');\n  const newArr = arr1.concat(arr2);\n  const uniq = newArr\n    .filter((str, index, array) => array.indexOf(str) === index)\n    .sort()\n    .join('');\n  return uniq;\n}\n//Round up to the next multiple of 5\nfunction roundToNext5(n) {\n  return Math.ceil(n / 5) * 5;\n}\n//Reverse words\nfunction reverseWords(str) {\n  return str.split('').reverse().join('').split(' ').reverse().join(' ');\n}\n//Find the capitals\nvar capitals = function (word) {\n  const arr = word.split('');\n  let newArr = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] == arr[i].toUpperCase()) {\n      newArr.push(arr.indexOf(arr[i]));\n    }\n  }\n  return newArr;\n};\n//Beginner Series #3 Sum of Numbers\nfunction getSum(a, b) {\n  if (a == b) {\n    return a;\n  } else if (a > b) {\n    return a + getSum(a - 1, b);\n  } else {\n    return a + getSum(a + 1, b);\n  }\n}\n// Digitize\nfunction digitize(n) {\n  const arr = Array.from(n.toString()).map(num => (num = +num));\n  return arr;\n}\n\n//Find the Missing Number\nfunction missingNo(nums) {\n  let result = [];\n\n  for (let i = 0; i <= Math.max.apply(null, nums); i++) {\n    if (!nums.includes(i)) {\n      result.push(i);\n    }\n  }\n  return Number(result.join(''));\n}\n//Halving Sum\nfunction halvingSum(n) {\n  let result = 0;\n  while (n > 0) {\n    result += n;\n    n = Math.floor(n / 2);\n  }\n  return result;\n}\n//Reversed Strings\nexport function solution(str) {\n  const arr = str.split('');\n  return arr.reverse().join('');\n}\n//Highest and Lowest\nfunction highAndLow(numbers) {\n  const arr = numbers.split(' ');\n  return [Math.max(...arr), Math.min(...arr)].join(' ');\n}\n//Guess the Sequence\nfunction sequence(x) {\n  let arr = [];\n  for (let i = 1; i <= x; i++) {\n    arr.push(i);\n  }\n  return arr.sort();\n}\n//Sum of all arguments\nfunction sum(...arg) {\n  let a = arg.reduce((prev, numb) => {\n    return prev + numb;\n  }, 0);\n  return a;\n}\n//V A P O R C O D E\nfunction vaporcode(string) {\n  arr = string.toUpperCase().split('');\n  newArr = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] !== ' ') {\n      newArr.push(arr[i]);\n    }\n  }\n  return newArr.join('  ');\n}\n//Predict your age!\nfunction predictAge(...age) {\n  return Math.floor(Math.sqrt(age.map(num => num * num).reduce((sum, numb) => sum + numb)) / 2);\n}\n\n//All Star Code Challenge #3\nfunction removeVowels(str) {\n  const vowels = ['a', 'e', 'i', 'o', 'u'];\n  let result = [];\n  for (let i = 0; i < str.length; i++) {\n    let flag = true;\n    for (let j = 0; j < vowels.length; j++) {\n      if (str[i] === vowels[j]) {\n        flag = false;\n        break;\n      }\n    }\n    if (flag) result.push(str[i]);\n  }\n  return result.join('');\n}\nremoveVowels('drake'); //“drk”\n\n//Working with arrays I (and why your code fails in some katas)\nfunction withoutLast(arr) {\n  return arr.slice(0, arr.length - 1);\n}\n//What is between?\nfunction between(a, b) {\n  let arr = [];\n  for (let i = a; i <= b; i++) {\n    arr.push(i);\n  }\n  return arr;\n}\n//Thinkful - Logic Drills: Traffic light\nfunction updateLight(current) {\n  switch (current) {\n    case 'green':\n      return 'yellow';\n      break;\n    case 'yellow':\n      return 'red';\n      break;\n    case 'red':\n      return 'green';\n      break;\n  }\n}\n//Filter Long Words\nfunction filterLongWords(str, n) {\n  return str.split(' ').filter(el => el.length > n);\n}\n//Friend or Foe?\nfunction friend(friends) {\n  return friends.filter(friend => friend.length == 4);\n}\n//Four/Seven\nfunction fourSeven(n) {\n  while (n == 4) return 7;\n  while (n == 7) return 4;\n  return 0;\n}\nfunction qw(num) {\n  const arr = num.toString().split('');\n  const cube = arr.length;\n  let result = 0;\n  for (let i = 0; i < arr.length; i++) {\n    const res = Math.pow(arr[i], cube);\n    result += res;\n  }\n  if (result % cube == 0) {\n    return true;\n  }\n  return false;\n}\nqw(1741725);\n//Square Every Digit\nfunction squareDigits(num) {\n  return Number(\n    num\n      .toString()\n      .split('')\n      .map(x => x * x)\n      .join(''),\n  );\n}\n//max diff - easy\nfunction maxDiff(list) {\n  if (list.length < 1) {\n    return 0;\n  }\n  return Math.max(...list) - Math.min(...list);\n}\n\n///////////////////////\nfunction validBraces(braces) {\n  const matches = { '(': ')', '{': '}', '[': ']' };\n  let stack = [];\n  let currentChar;\n\n  for (let i = 0; i < braces.length; i++) {\n    currentChar = braces[i];\n\n    if (matches[currentChar]) {\n      stack.push(currentChar);\n    } else {\n      if (currentChar !== matches[stack.pop()]) {\n        return 'Wrong order';\n      }\n    }\n  }\n\n  return stack.length === 0;\n}\n/////////////\nfunction openOrSenior(data) {\n  // let arr = [];\n  // for (let i = 0; i < data.length; i++) {\n  //   if (data[i][0] >= 55 || data[i][1] >= 7) {\n  //     arr.push((data[i] = 'Senior'));\n  //   }\n  //   arr.push((data[i] = 'Open'));\n  // }\n  const arr = data.map(number => (number[0] >= 55 && number[1] > 7 ? 'Senior' : 'Open'));\n  return arr;\n\n  // console.log(arr);\n}\n\nopenOrSenior([\n  [3, 12],\n  [55, 1],\n  [91, -2],\n  [53, 23],\n]);\n//Sort Numbers\nfunction solution(nums) {\n  if (nums == null) {\n    return [];\n  }\n  return nums.sort((a, b) => a - b);\n}\n\n///Sum up the random string\nfunction findNumbers(str) {\n  let result = 0;\n  const numbers = str.match(/\\d+/g).map(number => Number(number));\n  for (let i = 0; i < numbers.length; i++) {\n    result += numbers[i];\n  }\n  return result;\n}\nfindNumbers('In 2015, I want to know how much does iPhone 6+ cost?');\n\n//Count characters in your string\nfunction count(string) {\n  const counter = {};\n  string.split('').forEach(x => {\n    counter[x] = counter[x] ? counter[x] + 1 : 1;\n  });\n  return counter;\n}\n//Build Tower\nfunction towerBuilder(nFloors) {\n  let tower = [];\n  for (let i = 0; i < nFloors; i++) {\n    tower.push(' '.repeat(nFloors - i - 1) + '*'.repeat(i * 2 + 1) + ' '.repeat(nFloors - i - 1));\n  }\n  return tower;\n}\n//Unique In Order\nconst uniqueInOrder = function (iterable) {\n  var arr = [];\n  for (let i = 0; i < iterable.length; i++) {\n    if (iterable[i] !== iterable[i + 1]) {\n      arr.push(iterable[i]);\n    }\n  }\n  return arr;\n};\n//Reverse every other word in the string\nfunction reverse(str) {\n  return str\n    .trim()\n    .split(' ')\n    .map((el, index) => {\n      return index % 2 ? el.split('').reverse().join('') : el;\n    })\n    .join(' ');\n}\n//Create Phone Number\nfunction createPhoneNumber(numbers) {\n  return `(${numbers[0]}${numbers[1]}${numbers[2]}) ${numbers[3]}${numbers[4]}${numbers[5]}-${numbers[6]}${numbers[7]}${numbers[8]}${numbers[9]}`;\n}\n//Who likes it?\nfunction likes(names) {\n  if (names.length < 1) {\n    return `no one likes this`;\n  } else if (names.length == 1) {\n    return `${names[0]} likes this`;\n  } else if (names.length == 2) {\n    return `${names[0]} and ${names[1]} like this`;\n  } else if (names.length == 3) {\n    return `${names[0]}, ${names[1]} and ${names[2]} like this`;\n  } else if (names.length >= 4) {\n    return `${names[0]}, ${names[1]} and ${names.length - 2} others like this`;\n  }\n}\n//Find the unique number\nfunction findUniq(arr) {\n  return +arr.filter(value => {\n    return arr.indexOf(value) == arr.lastIndexOf(value);\n  });\n}\n//Smallest Permutation\nfunction permutation(n) {\n  let newArr = [];\n  const arr = n.toString().split('');\n  if (arr[arr.length - 1] == 0) {\n    return Number(arr.join(''));\n  }\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] != 0) {\n      newArr.push(arr[i]);\n    }\n  }\n\n  const result = newArr.sort((a, b) => a - b).join('');\n  return Number(result);\n}\n// console.log(permutation(642950));\n// Kebabize\nfunction kebabize(str) {\n  return str\n    .replace(/[0-9]/g, '')\n    .split(/(?=[A-Z])/)\n    .join('-')\n    .toLowerCase();\n}\n\n//String transformer\nfunction stringTransformer(str) {\n  const arr = str.split('');\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === arr[i].toUpperCase()) {\n      arr[i] = arr[i].toLowerCase();\n    } else {\n      arr[i] = arr[i].toUpperCase();\n    }\n  }\n  return arr.join('').split(' ').reverse().join(' ');\n}\n// or\n\nfunction stringTransformer(str) {\n  let lowercase = 'abcdefghijklmnopqrstuvwxyz';\n  return str\n    .split('')\n    .map(letter => (lowercase.indexOf(letter) === -1 ? letter.toLowerCase() : letter.toUpperCase()))\n    .join('')\n    .split(' ')\n    .reverse()\n    .join(' ');\n}\n//Count letters in string\nfunction letterCount(s) {\n  let result = {};\n  const arr = s.split('');\n  for (let i = 0; i < arr.length; ++i) {\n    let a = arr[i];\n    if (result[a] != undefined) ++result[a];\n    else result[a] = 1;\n  }\n  return result;\n}\n///Array.diff\nfunction arrayDiff(a, b) {\n  let arr = a.filter(i => b.indexOf(i) < 0);\n  return arr;\n}\n//\nfunction findNumber(arr) {\n  let result = [];\n  const flatArr = arr\n    .map(num => (num.length < 1 ? '0' : num))\n    .toString()\n    .split(',');\n  for (let i = 0; i < flatArr.length; i++) {\n    if (flatArr[i].includes('-')) {\n      const intervalArr = flatArr[i].split('-');\n      let low = +intervalArr[0];\n      let high = +intervalArr[1];\n      for (let i = low; i <= high; i++) {\n        result.push(low++);\n      }\n    }\n    result.push(flatArr[i]);\n  }\n  return result.map(Number).filter(num => !Number.isNaN(num));\n}\n// console.log(findNumber(['1,2,3', '5,6,7-10', '12-16', '']));\n\n///\nfunction dontGiveMeFive(start, end) {\n  let result = [];\n  for (let i = start; i <= end; i++) {\n    if (i.toString().includes('5')) {\n      continue;\n    }\n    result.push(i);\n  }\n  return result.length;\n}\n// console.log(dontGiveMeFive(4, 17));\n\n//Minimize Sum Of Array (Array Series #1)\nfunction findmin(arr) {\n  let result = [];\n  const sorted = arr.sort((a, b) => a - b);\n  const first = arr.splice(0, arr.length / 2);\n  const second = sorted.sort((a, b) => b - a);\n  for (let i = 0; i < first.length; i++) {\n    result.push(first[i] * second[i]);\n  }\n  return result.reduce((acc, num) => (acc += num));\n}\nfindmin([9, 2, 8, 7, 5, 4, 0, 6]);\n\n///\nfunction getCommonElements(array1, array2) {\n  const newArr = [];\n\n  for (let i = 0; i < array2.length; i++) {\n    if (array1.includes(array2[i])) {\n      newArr.push(array2[i]);\n    }\n  }\n  return newArr;\n}\n// console.log(getCommonElements([1, 3, 5], [0, 8, 5, 3]));\n// Sum of two lowest positive integers\nfunction sumTwoSmallestNumbers(numbers) {\n  const sortedArr = numbers.sort((a, b) => a - b);\n  return sortedArr[0] + sortedArr[1];\n}\nfunction find(str, wordsArr) {\n  console.log(`Вхідна строка -> ${str}`);\n  console.log(`Вхідний масив для порівняння -> ${wordsArr}`);\n  let result = [];\n  const strArr = str.split(' ');\n  for (let i = 0; i < strArr.length; i++) {\n    for (let j = 0; j < wordsArr.length; j++) {\n      if (strArr[i] != wordsArr[j]) {\n        result.push(strArr[i]);\n      }\n    }\n  }\n  return `Результат -> ${result.join(' ')}`;\n}\n// console.log(find('This is Sparta', ['is']));\n///\nfunction getDivisorsCnt(n) {\n  let result = [];\n  let i = 0;\n  while (i < n) {\n    i++;\n    if (n % i === 0) {\n      console.log(i);\n      result.push(i);\n    }\n  }\n  return result.length;\n}\n// console.log(getDivisorsCnt(30));\n///\n// console.log(+!+[] + !+[] + !+[] + !+[] + !+[]);\n///\nfunction printerError(s) {\n  let regExp = /[^n-z]/g;\n  const trimS = s.toLowerCase().replace(regExp, '');\n  return `${trimS.length}/${s.length}`;\n}\n// console.log(printerError('aaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbmmmmmmmmmmmmmmmmmmmxyz'));\n//\nfunction oddCount(n) {\n  return Math.floor(n / 2);\n}\n// console.log(oddCount(15023));\n// function consecutive(arr, a, b) {\nfunction consecutive(arr, a, b) {\n  return arr.includes(a) && arr.includes(b);\n}\nconsole.log(consecutive([1, 3, 5, 7], 3, 7));\n"]}